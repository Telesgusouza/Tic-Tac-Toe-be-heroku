package com.example.demo.handler;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.socket.CloseStatus;
import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketSession;
import org.springframework.web.socket.handler.TextWebSocketHandler;

import com.example.demo.service.MatchmakingService;

@Component
public class WsWebSocketHandler extends TextWebSocketHandler {

	private final MatchmakingService matchmakingService;

	@Autowired
	public WsWebSocketHandler(MatchmakingService matchmakingService) {
		this.matchmakingService = matchmakingService;
	}

	@Override
	protected void handleTextMessage(WebSocketSession session, TextMessage textMessage) throws Exception {
		String message = textMessage.getPayload();

		if (message.equals("find_match")) {
			matchmakingService.findMatch(session);
		} else if (message.equals("cancel_search")) {
			matchmakingService.cancelSearch(session);
		}
	}

	@Override
	public void afterConnectionClosed(WebSocketSession session, CloseStatus status) throws Exception {
		super.afterConnectionClosed(session, status);
		matchmakingService.removeUserFromQueue(session);
	}

}
